{"ast":null,"code":"import axios from \"axios\";\nconst PACIENTE_API_BASE_URL = \"http://localhost:4002/pacientes\";\nclass PacienteService {\n  createPaciente(paciente) {\n    return axios.post(PACIENTE_API_BASE_URL, paciente);\n  }\n  getPacienteById(idPaciente) {\n    return axios.get(PACIENTE_API_BASE_URL + \"/\" + idPaciente);\n  }\n  updatePaciente(paciente, idPaciente) {\n    return axios.put(PACIENTE_API_BASE_URL + \"/\" + idPaciente, paciente);\n  }\n  deletePaciente(idPaciente) {\n    return axios.delete(PACIENTE_API_BASE_URL + \"/\" + idPaciente);\n  }\n  async getPaciente(idUsuario) {\n    try {\n      const response = await axios.get(`${PACIENTE_API_BASE_URL}?filter[where][idUsuario]=${idUsuario}`);\n      const paciente = response.data;\n      return paciente;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  async getAgendas(idPsicologo) {\n    const response = await axios.get(`${PACIENTE_API_BASE_URL}?filter=` + JSON.stringify({\n      \"where\": {\n        \"idPsicologo\": idPsicologo\n      }\n    }));\n    const pacientes = response.data;\n    const pacientesIds = pacientes.map(paciente => paciente.idPaciente);\n    const urlAgendas = `http://localhost:4002/agenda?filter=` + JSON.stringify({\n      \"where\": {\n        \"idPaciente\": {\n          \"inq\": pacientesIds\n        }\n      }\n    });\n    const responseAgendas = await axios.get(urlAgendas);\n    const agendasInfo = responseAgendas.data;\n    return agendasInfo;\n  }\n}\nexport default new PacienteService();","map":{"version":3,"names":["axios","PACIENTE_API_BASE_URL","PacienteService","createPaciente","paciente","post","getPacienteById","idPaciente","get","updatePaciente","put","deletePaciente","delete","getPaciente","idUsuario","response","data","error","console","getAgendas","idPsicologo","JSON","stringify","pacientes","pacientesIds","map","urlAgendas","responseAgendas","agendasInfo"],"sources":["C:/Users/admin/Documents/web_psique_react/src/services/PacienteServices.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst PACIENTE_API_BASE_URL = \"http://localhost:4002/pacientes\";\r\n\r\nclass PacienteService {\r\n  \r\n  createPaciente(paciente) {\r\n    return axios.post(PACIENTE_API_BASE_URL, paciente);\r\n  }\r\n  getPacienteById(idPaciente) {\r\n    return axios.get(PACIENTE_API_BASE_URL + \"/\" + idPaciente);\r\n  }\r\n  updatePaciente(paciente, idPaciente) {\r\n    return axios.put(PACIENTE_API_BASE_URL + \"/\" + idPaciente, paciente);\r\n  }\r\n  deletePaciente(idPaciente) {\r\n    return axios.delete(PACIENTE_API_BASE_URL + \"/\" + idPaciente);\r\n  }\r\n  async getPaciente(idUsuario){\r\n    try {\r\n       const response = await axios.get(`${PACIENTE_API_BASE_URL}?filter[where][idUsuario]=${idUsuario}`);\r\n       const paciente = response.data;\r\n       return paciente;\r\n     } catch (error) {\r\n       console.error(error);\r\n     }\r\n   }\r\n   async getAgendas(idPsicologo) {\r\n\r\n    const response = await axios.get(`${PACIENTE_API_BASE_URL}?filter=` + JSON.stringify({\r\n      \"where\": {\r\n        \"idPsicologo\": idPsicologo\r\n      },\r\n    }));\r\n    const pacientes = response.data;\r\n    const pacientesIds = pacientes.map((paciente) => paciente.idPaciente);\r\n    const urlAgendas = `http://localhost:4002/agenda?filter=` + JSON.stringify({\r\n      \"where\": {\r\n        \"idPaciente\": { \"inq\": pacientesIds }\r\n      },\r\n    });\r\n    const responseAgendas = await axios.get(urlAgendas);\r\n  const agendasInfo = responseAgendas.data;\r\n  \r\n    return agendasInfo;\r\n  }\r\n}\r\nexport default new PacienteService();"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,qBAAqB,GAAG,iCAAiC;AAE/D,MAAMC,eAAe,CAAC;EAEpBC,cAAcA,CAACC,QAAQ,EAAE;IACvB,OAAOJ,KAAK,CAACK,IAAI,CAACJ,qBAAqB,EAAEG,QAAQ,CAAC;EACpD;EACAE,eAAeA,CAACC,UAAU,EAAE;IAC1B,OAAOP,KAAK,CAACQ,GAAG,CAACP,qBAAqB,GAAG,GAAG,GAAGM,UAAU,CAAC;EAC5D;EACAE,cAAcA,CAACL,QAAQ,EAAEG,UAAU,EAAE;IACnC,OAAOP,KAAK,CAACU,GAAG,CAACT,qBAAqB,GAAG,GAAG,GAAGM,UAAU,EAAEH,QAAQ,CAAC;EACtE;EACAO,cAAcA,CAACJ,UAAU,EAAE;IACzB,OAAOP,KAAK,CAACY,MAAM,CAACX,qBAAqB,GAAG,GAAG,GAAGM,UAAU,CAAC;EAC/D;EACA,MAAMM,WAAWA,CAACC,SAAS,EAAC;IAC1B,IAAI;MACD,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACQ,GAAG,CAAE,GAAEP,qBAAsB,6BAA4Ba,SAAU,EAAC,CAAC;MAClG,MAAMV,QAAQ,GAAGW,QAAQ,CAACC,IAAI;MAC9B,OAAOZ,QAAQ;IACjB,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF;EACA,MAAME,UAAUA,CAACC,WAAW,EAAE;IAE7B,MAAML,QAAQ,GAAG,MAAMf,KAAK,CAACQ,GAAG,CAAE,GAAEP,qBAAsB,UAAS,GAAGoB,IAAI,CAACC,SAAS,CAAC;MACnF,OAAO,EAAE;QACP,aAAa,EAAEF;MACjB;IACF,CAAC,CAAC,CAAC;IACH,MAAMG,SAAS,GAAGR,QAAQ,CAACC,IAAI;IAC/B,MAAMQ,YAAY,GAAGD,SAAS,CAACE,GAAG,CAAErB,QAAQ,IAAKA,QAAQ,CAACG,UAAU,CAAC;IACrE,MAAMmB,UAAU,GAAI,sCAAqC,GAAGL,IAAI,CAACC,SAAS,CAAC;MACzE,OAAO,EAAE;QACP,YAAY,EAAE;UAAE,KAAK,EAAEE;QAAa;MACtC;IACF,CAAC,CAAC;IACF,MAAMG,eAAe,GAAG,MAAM3B,KAAK,CAACQ,GAAG,CAACkB,UAAU,CAAC;IACrD,MAAME,WAAW,GAAGD,eAAe,CAACX,IAAI;IAEtC,OAAOY,WAAW;EACpB;AACF;AACA,eAAe,IAAI1B,eAAe,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}